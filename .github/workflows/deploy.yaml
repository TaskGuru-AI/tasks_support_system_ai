name: Deploy

on:
  push:
    branches: [ main, 'test-deploy*' ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Create deployment directory
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            mkdir -p /opt/app
            rm -rf /opt/app/temp
            mkdir -p /opt/app/temp

      - name: Copy files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: ".,!.git/**,!notebooks/**,!.gitignore,!.env"
          target: "/opt/app/temp"

      - name: Deploy application
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            set -e
            cd /opt/app

            # Stop current services
            docker compose down || true

            # Backup current env file if it exists
            if [ -f .env ]; then
              cp .env temp/.env
            else
              echo "${{ secrets.ENV_FILE }}" > temp/.env
            fi

            # Remove old files except volumes
            rm -rf $(ls -A | grep -v '^temp$' | grep -v 'volumes')

            # Move new files from temp
            mv temp/* temp/.[!.]* .
            rm -rf temp

            docker compose build
            docker compose up -d

            # Cleanup unused images
            docker image prune -f

            just pull-data
