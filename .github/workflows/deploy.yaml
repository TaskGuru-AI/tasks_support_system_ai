name: Test Deploy

on:
  push:
    branches: [ main , test-deploy*]
  workflow_dispatch:

jobs:
  test-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Connect to Headscale
        run: |
            curl -fsSL https://pkgs.tailscale.com/stable/ubuntu/jammy.noarmor.gpg | sudo tee /usr/share/keyrings/tailscale-archive-keyring.gpg >/dev/null
            curl -fsSL https://pkgs.tailscale.com/stable/ubuntu/jammy.tailscale-keyring.list | sudo tee /etc/apt/sources.list.d/tailscale.list
            sudo apt-get update
            sudo apt-get install -y tailscale
            sudo systemctl start tailscaled

            for i in {1..2}; do
              echo "Attempt $i to connect to Headscale..."
              if sudo tailscale up \
                --login-server=${{ secrets.TAILSCALE_SERVER }} \
                --authkey=${{ secrets.TAILSCALE_AUTHKEY }} \
                --accept-routes \
                --accept-dns=false; then
                echo "Successfully connected to Headscale"
                curl -v ${{ secrets.DEPLOY_HOST }}
                exit 0
              fi
              sleep 5
            done
            echo "Failed to connect to Headscale after 2 attempts"
            exit 1

      - name: Create deployment directory
        uses: appleboy/ssh-action@master
        with:
            host: ${{ secrets.DEPLOY_HOST }}
            username: ${{ secrets.SERVER_USERNAME }}
            key: ${{ secrets.DEPLOY_SSH_KEY }}
            password: ${{ secrets.SERVER_PASSWORD }}
            script: |
                mkdir -p ~/app
                mkdir -p ~/app/temp
                mkdir -p ~/app/data
                mkdir -p ~/app/volumes

      - name: Copy files to server
        uses: appleboy/scp-action@master
        with:
            host: ${{ secrets.DEPLOY_HOST }}
            username: ${{ secrets.SERVER_USERNAME }}
            key: ${{ secrets.DEPLOY_SSH_KEY }}
            source: ".,!.git/**,!notebooks/**,!.gitignore,!.env"
            target: "~/app/temp"

      - name: Deploy application
        uses: appleboy/ssh-action@master
        with:
            host: ${{ secrets.DEPLOY_HOST }}
            username: ${{ secrets.SERVER_USERNAME }}
            key: ${{ secrets.DEPLOY_SSH_KEY }}
            command_timeout: "30m"
            script: |
                set -e
                cd ~/app

                docker system prune -af --filter "until=100h"
                docker builder prune -af --filter "until=100h"

                docker compose down || true

                echo "${{ secrets.ENV_FILE }}" > temp/.env

                # Remove old files except volumes and temp
                find . -maxdepth 1 ! -name 'volumes' ! -name 'temp' ! -name '.' -exec rm -rf {} +

                mv temp/* temp/.[!.]* . 2>/dev/null || true
                rm -rf temp

                find . -type f -exec chmod 644 {} \;
                find . -type d -exec chmod 755 {} \;

                chmod +x docker-compose.yml

                docker compose up backend -d --build
                docker compose exec backend poetry run minio-sync pull
                docker compose down backend
                docker compose up backend frontend -d --build

                docker image prune -f
